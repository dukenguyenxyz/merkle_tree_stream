crystal_doc_search_index_callback({"repository_name":"merkle_tree_stream","body":"# merkle_tree_stream\n\n[![Build Status](https://travis-ci.com/dukeraphaelng/merkle_tree_stream.svg?branch=master)](https://travis-ci.com/dukeraphaelng/merkle_tree_stream) [![Docs](https://img.shields.io/badge/docs-available-brightgreen.svg)](https://dukeraphaelng.github.io/merkle_tree_stream/) [![GitHub release (latest by date)](https://img.shields.io/github/v/release/dukeraphaelng/merkle_tree_stream)](https://img.shields.io/github/v/release/dukeraphaelng/merkle_tree_stream?style=flat-square)\n\nA stream that generates a merkle tree based on the incoming data. Port of [mafintosh/merkle-tree-stream](https://github.com/mafintosh/merkle-tree-stream)\n\n- [Documentation](https://dukeraphaelng.github.io/merkle_tree_stream/)\n\n## Installation\n\n1. Add the dependency to your `shard.yml`:\n\n```yaml\ndependencies:\n  merkle_tree_stream:\n    github: dukeraphaelng/merkle_tree_stream\n```\n\n2. Run `shards install`\n\n## Usage\n\nMerkle Tree Stream is a stateful algorithm class that takes data in, hashes it, and computes as many parent hashes as it can through [dukeraphaelng/flat_tree](https://github.com/dukeraphaelng/flat_tree) - this is done through the `.next` method, which keeps track of three properties:\n- `blocks`: an index to keep track of how far along in the sequence we are.\n- `nodes`: a vector of hashes\n- `roots`: the current roots.\n\nYou can read more about Merkle Tree Stream [here](https://datprotocol.github.io/book/ch02-02-merkle-tree-stream.html)\n\n```crystal\nrequire \"merkle_tree_stream\"\n\nleaf = Proc(MerkleTree::Node, Array(MerkleTree::Node)?, Bytes).new do |node, roots|\n  Digest::SHA256.digest(node.data)\nend\n\nparent = Proc(MerkleTree::Node, MerkleTree::Node, Bytes).new do |left, right|\n  Digest::SHA256.digest do |ctx|\n    ctx.update left.data\n    ctx.update right.data\n  end\nend\n\nmerkle = MerkleTree::Stream.new(leaf, parent)\nnodes = [] of MerkleTree::Node\nmerkle.next(\"a\".to_slice, nodes)\nmerkle.next(\"b\".to_slice, nodes)\nputs {nodes: nodes}\n\n# => [\n  #<MerkleTree::Node:0x107ebfe10 \n    @index=0, \n    @parent=1, \n    @hash=Bytes[202, 151, 129, 18, 202, 27, 189, 202, 250, 194, 49, 179, 154, 35, 220, 77, 167, 134, 239, 248, 20, 124, 78, 114, 185, 128, 119, 133, 175, 238, 72, 187], \n    @size=1, \n    @data=Bytes[97]\n  >,\n  #<MerkleTree::Node:0x107ebfdc0 \n    @index=2, \n    @parent=1, \n    @hash=Bytes[62, 35, 232, 22, 0, 57, 89, 74, 51, 137, 79, 101, 100, 225, 177, 52, 139, 189, 122, 0, 136, 212, 44, 74, 203, 115, 238, 174, 213, 156, 0, 157], \n    @size=1, \n    @data=Bytes[98]\n  >, \n  #<MerkleTree::Node:0x107ebfd70 \n    @index=1, \n    @parent=3, \n    @hash=Bytes[251, 142, 32, 252, 46, 76, 63, 36, 140, 96, 195, 155, 214, 82, 243, 193, 52, 114, 152, 187, 151, 123, 139, 77, 89, 3, 184, 80, 85, 98, 6, 3], \n    @size=2, \n    @data=Bytes[]\n  >\n]\n```\n\n`MerkleTree::Node` Instance Variables:\n- `index`: tree node index, even numbers are data nodes\n- `parent`: tree node's parent node's index\n- `hash`: tree node's hash\n- `size`: tree node's data size\n- `data`: tree node's raw data\n\n## Contributing\n\n1. Fork it (<https://github.com/dukeraphaelng/merkle_tree_stream/fork>)\n2. Create your feature branch (`git checkout -b my-new-feature`)\n3. Commit your changes (`git commit -am 'Add some feature'`)\n4. Push to the branch (`git push origin my-new-feature`)\n5. Create a new Pull Request\n\n## Contributors\n\n- [Duke Nguyen](https://github.com/dukeraphaelng) - creator and maintainer\n\n## License\n\n- [MIT](LICENSE)","program":{"html_id":"merkle_tree_stream/toplevel","path":"toplevel.html","kind":"module","full_name":"Top Level Namespace","name":"Top Level Namespace","abstract":false,"superclass":null,"ancestors":[],"locations":[],"repository_name":"merkle_tree_stream","program":true,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":null,"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[{"html_id":"merkle_tree_stream/MerkleTree","path":"MerkleTree.html","kind":"module","full_name":"MerkleTree","name":"MerkleTree","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"src/merkle_tree_stream.cr","line_number":3,"url":"https://github.com/dukeraphaelng/merkle_tree_stream/blob/7519fa6d975f7479fb2e9d70a810d08ad3ce72a7/src/merkle_tree_stream.cr#L3"}],"repository_name":"merkle_tree_stream","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":null,"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[{"html_id":"merkle_tree_stream/MerkleTree/Node","path":"MerkleTree/Node.html","kind":"class","full_name":"MerkleTree::Node","name":"Node","abstract":false,"superclass":{"html_id":"merkle_tree_stream/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"merkle_tree_stream/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"merkle_tree_stream/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/merkle_tree_stream.cr","line_number":4,"url":"https://github.com/dukeraphaelng/merkle_tree_stream/blob/7519fa6d975f7479fb2e9d70a810d08ad3ce72a7/src/merkle_tree_stream.cr#L4"}],"repository_name":"merkle_tree_stream","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"merkle_tree_stream/MerkleTree","kind":"module","full_name":"MerkleTree","name":"MerkleTree"},"doc":null,"summary":null,"class_methods":[],"constructors":[{"id":"new(index,parent,size,data,hash)-class-method","html_id":"new(index,parent,size,data,hash)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"index","doc":null,"default_value":"","external_name":"index","restriction":""},{"name":"parent","doc":null,"default_value":"","external_name":"parent","restriction":""},{"name":"size","doc":null,"default_value":"","external_name":"size","restriction":""},{"name":"data","doc":null,"default_value":"","external_name":"data","restriction":""},{"name":"hash","doc":null,"default_value":"","external_name":"hash","restriction":""}],"args_string":"(index, parent, size, data, hash)","args_html":"(index, parent, size, data, hash)","location":{"filename":"src/merkle_tree_stream.cr","line_number":16,"url":"https://github.com/dukeraphaelng/merkle_tree_stream/blob/7519fa6d975f7479fb2e9d70a810d08ad3ce72a7/src/merkle_tree_stream.cr#L16"},"def":{"name":"new","args":[{"name":"index","doc":null,"default_value":"","external_name":"index","restriction":""},{"name":"parent","doc":null,"default_value":"","external_name":"parent","restriction":""},{"name":"size","doc":null,"default_value":"","external_name":"size","restriction":""},{"name":"data","doc":null,"default_value":"","external_name":"data","restriction":""},{"name":"hash","doc":null,"default_value":"","external_name":"hash","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(index, parent, size, data, hash)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"data:Bytes-instance-method","html_id":"data:Bytes-instance-method","name":"data","doc":"Data if it's a leaf node, otherwise empty bytes","summary":"<p>Data if it's a leaf node, otherwise empty bytes</p>","abstract":false,"args":[],"args_string":" : Bytes","args_html":" : Bytes","location":{"filename":"src/merkle_tree_stream.cr","line_number":14,"url":"https://github.com/dukeraphaelng/merkle_tree_stream/blob/7519fa6d975f7479fb2e9d70a810d08ad3ce72a7/src/merkle_tree_stream.cr#L14"},"def":{"name":"data","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Bytes","visibility":"Public","body":"@data"}},{"id":"data=(data:Bytes)-instance-method","html_id":"data=(data:Bytes)-instance-method","name":"data=","doc":"Data if it's a leaf node, otherwise empty bytes","summary":"<p>Data if it's a leaf node, otherwise empty bytes</p>","abstract":false,"args":[{"name":"data","doc":null,"default_value":"","external_name":"data","restriction":"Bytes"}],"args_string":"(data : Bytes)","args_html":"(data : Bytes)","location":{"filename":"src/merkle_tree_stream.cr","line_number":14,"url":"https://github.com/dukeraphaelng/merkle_tree_stream/blob/7519fa6d975f7479fb2e9d70a810d08ad3ce72a7/src/merkle_tree_stream.cr#L14"},"def":{"name":"data=","args":[{"name":"data","doc":null,"default_value":"","external_name":"data","restriction":"Bytes"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@data = data"}},{"id":"hash:Bytes?-instance-method","html_id":"hash:Bytes?-instance-method","name":"hash","doc":"Hash of the data","summary":"<p>Hash of the data</p>","abstract":false,"args":[],"args_string":" : Bytes?","args_html":" : Bytes?","location":{"filename":"src/merkle_tree_stream.cr","line_number":10,"url":"https://github.com/dukeraphaelng/merkle_tree_stream/blob/7519fa6d975f7479fb2e9d70a810d08ad3ce72a7/src/merkle_tree_stream.cr#L10"},"def":{"name":"hash","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Bytes | ::Nil","visibility":"Public","body":"@hash"}},{"id":"hash=(hash:Bytes?)-instance-method","html_id":"hash=(hash:Bytes?)-instance-method","name":"hash=","doc":"Hash of the data","summary":"<p>Hash of the data</p>","abstract":false,"args":[{"name":"hash","doc":null,"default_value":"","external_name":"hash","restriction":"Bytes | ::Nil"}],"args_string":"(hash : Bytes?)","args_html":"(hash : Bytes?)","location":{"filename":"src/merkle_tree_stream.cr","line_number":10,"url":"https://github.com/dukeraphaelng/merkle_tree_stream/blob/7519fa6d975f7479fb2e9d70a810d08ad3ce72a7/src/merkle_tree_stream.cr#L10"},"def":{"name":"hash=","args":[{"name":"hash","doc":null,"default_value":"","external_name":"hash","restriction":"Bytes | ::Nil"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@hash = hash"}},{"id":"index:UInt64-instance-method","html_id":"index:UInt64-instance-method","name":"index","doc":"Offset into the flat-tree data structure","summary":"<p>Offset into the flat-tree data structure</p>","abstract":false,"args":[],"args_string":" : UInt64","args_html":" : UInt64","location":{"filename":"src/merkle_tree_stream.cr","line_number":6,"url":"https://github.com/dukeraphaelng/merkle_tree_stream/blob/7519fa6d975f7479fb2e9d70a810d08ad3ce72a7/src/merkle_tree_stream.cr#L6"},"def":{"name":"index","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"UInt64","visibility":"Public","body":"@index"}},{"id":"index=(index:UInt64)-instance-method","html_id":"index=(index:UInt64)-instance-method","name":"index=","doc":"Offset into the flat-tree data structure","summary":"<p>Offset into the flat-tree data structure</p>","abstract":false,"args":[{"name":"index","doc":null,"default_value":"","external_name":"index","restriction":"UInt64"}],"args_string":"(index : UInt64)","args_html":"(index : UInt64)","location":{"filename":"src/merkle_tree_stream.cr","line_number":6,"url":"https://github.com/dukeraphaelng/merkle_tree_stream/blob/7519fa6d975f7479fb2e9d70a810d08ad3ce72a7/src/merkle_tree_stream.cr#L6"},"def":{"name":"index=","args":[{"name":"index","doc":null,"default_value":"","external_name":"index","restriction":"UInt64"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@index = index"}},{"id":"parent:UInt64-instance-method","html_id":"parent:UInt64-instance-method","name":"parent","doc":"Reference to this node's parent node","summary":"<p>Reference to this node's parent node</p>","abstract":false,"args":[],"args_string":" : UInt64","args_html":" : UInt64","location":{"filename":"src/merkle_tree_stream.cr","line_number":8,"url":"https://github.com/dukeraphaelng/merkle_tree_stream/blob/7519fa6d975f7479fb2e9d70a810d08ad3ce72a7/src/merkle_tree_stream.cr#L8"},"def":{"name":"parent","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"UInt64","visibility":"Public","body":"@parent"}},{"id":"parent=(parent:UInt64)-instance-method","html_id":"parent=(parent:UInt64)-instance-method","name":"parent=","doc":"Reference to this node's parent node","summary":"<p>Reference to this node's parent node</p>","abstract":false,"args":[{"name":"parent","doc":null,"default_value":"","external_name":"parent","restriction":"UInt64"}],"args_string":"(parent : UInt64)","args_html":"(parent : UInt64)","location":{"filename":"src/merkle_tree_stream.cr","line_number":8,"url":"https://github.com/dukeraphaelng/merkle_tree_stream/blob/7519fa6d975f7479fb2e9d70a810d08ad3ce72a7/src/merkle_tree_stream.cr#L8"},"def":{"name":"parent=","args":[{"name":"parent","doc":null,"default_value":"","external_name":"parent","restriction":"UInt64"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@parent = parent"}},{"id":"size:UInt64-instance-method","html_id":"size:UInt64-instance-method","name":"size","doc":"Total size of all its child nodes combined","summary":"<p>Total size of all its child nodes combined</p>","abstract":false,"args":[],"args_string":" : UInt64","args_html":" : UInt64","location":{"filename":"src/merkle_tree_stream.cr","line_number":12,"url":"https://github.com/dukeraphaelng/merkle_tree_stream/blob/7519fa6d975f7479fb2e9d70a810d08ad3ce72a7/src/merkle_tree_stream.cr#L12"},"def":{"name":"size","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"UInt64","visibility":"Public","body":"@size"}},{"id":"size=(size:UInt64)-instance-method","html_id":"size=(size:UInt64)-instance-method","name":"size=","doc":"Total size of all its child nodes combined","summary":"<p>Total size of all its child nodes combined</p>","abstract":false,"args":[{"name":"size","doc":null,"default_value":"","external_name":"size","restriction":"UInt64"}],"args_string":"(size : UInt64)","args_html":"(size : UInt64)","location":{"filename":"src/merkle_tree_stream.cr","line_number":12,"url":"https://github.com/dukeraphaelng/merkle_tree_stream/blob/7519fa6d975f7479fb2e9d70a810d08ad3ce72a7/src/merkle_tree_stream.cr#L12"},"def":{"name":"size=","args":[{"name":"size","doc":null,"default_value":"","external_name":"size","restriction":"UInt64"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@size = size"}}],"macros":[],"types":[]},{"html_id":"merkle_tree_stream/MerkleTree/Stream","path":"MerkleTree/Stream.html","kind":"class","full_name":"MerkleTree::Stream","name":"Stream","abstract":false,"superclass":{"html_id":"merkle_tree_stream/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"merkle_tree_stream/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"merkle_tree_stream/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/merkle_tree_stream.cr","line_number":20,"url":"https://github.com/dukeraphaelng/merkle_tree_stream/blob/7519fa6d975f7479fb2e9d70a810d08ad3ce72a7/src/merkle_tree_stream.cr#L20"}],"repository_name":"merkle_tree_stream","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"merkle_tree_stream/MerkleTree","kind":"module","full_name":"MerkleTree","name":"MerkleTree"},"doc":null,"summary":null,"class_methods":[],"constructors":[{"id":"new(leaf,parent,roots=[]ofNode)-class-method","html_id":"new(leaf,parent,roots=[]ofNode)-class-method","name":"new","doc":"Create a new MerkleTreeStream instance","summary":"<p>Create a new MerkleTreeStream instance</p>","abstract":false,"args":[{"name":"leaf","doc":null,"default_value":"","external_name":"leaf","restriction":""},{"name":"parent","doc":null,"default_value":"","external_name":"parent","restriction":""},{"name":"roots","doc":null,"default_value":"[] of Node","external_name":"roots","restriction":""}],"args_string":"(leaf, parent, roots = <span class=\"o\">[]</span> <span class=\"k\">of</span> <span class=\"t\">Node</span>)","args_html":"(leaf, parent, roots = <span class=\"o\">[]</span> <span class=\"k\">of</span> <span class=\"t\">Node</span>)","location":{"filename":"src/merkle_tree_stream.cr","line_number":29,"url":"https://github.com/dukeraphaelng/merkle_tree_stream/blob/7519fa6d975f7479fb2e9d70a810d08ad3ce72a7/src/merkle_tree_stream.cr#L29"},"def":{"name":"new","args":[{"name":"leaf","doc":null,"default_value":"","external_name":"leaf","restriction":""},{"name":"parent","doc":null,"default_value":"","external_name":"parent","restriction":""},{"name":"roots","doc":null,"default_value":"[] of Node","external_name":"roots","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(leaf, parent, roots)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"blocks:UInt64-instance-method","html_id":"blocks:UInt64-instance-method","name":"blocks","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : UInt64","args_html":" : UInt64","location":{"filename":"src/merkle_tree_stream.cr","line_number":26,"url":"https://github.com/dukeraphaelng/merkle_tree_stream/blob/7519fa6d975f7479fb2e9d70a810d08ad3ce72a7/src/merkle_tree_stream.cr#L26"},"def":{"name":"blocks","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"UInt64","visibility":"Public","body":"@blocks"}},{"id":"leaf:Proc(Node,Array(Node)?,Bytes)-instance-method","html_id":"leaf:Proc(Node,Array(Node)?,Bytes)-instance-method","name":"leaf","doc":"Pass data through a hash function","summary":"<p>Pass data through a hash function</p>","abstract":false,"args":[],"args_string":" : Proc(Node, Array(Node)?, Bytes)","args_html":" : Proc(<a href=\"../MerkleTree/Node.html\">Node</a>, Array(<a href=\"../MerkleTree/Node.html\">Node</a>)?, Bytes)","location":{"filename":"src/merkle_tree_stream.cr","line_number":22,"url":"https://github.com/dukeraphaelng/merkle_tree_stream/blob/7519fa6d975f7479fb2e9d70a810d08ad3ce72a7/src/merkle_tree_stream.cr#L22"},"def":{"name":"leaf","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Proc(Node, Array(Node) | ::Nil, Bytes)","visibility":"Public","body":"@leaf"}},{"id":"next(data:Bytes,nodes:Array(Node)=[]ofNode):Array(Node)-instance-method","html_id":"next(data:Bytes,nodes:Array(Node)=[]ofNode):Array(Node)-instance-method","name":"next","doc":"Pass a string buffer through the flat-tree hash functions, and write the result back out to \"nodes\"","summary":"<p>Pass a string buffer through the flat-tree hash functions, and write the result back out to \"nodes\"</p>","abstract":false,"args":[{"name":"data","doc":null,"default_value":"","external_name":"data","restriction":"Bytes"},{"name":"nodes","doc":null,"default_value":"[] of Node","external_name":"nodes","restriction":"Array(Node)"}],"args_string":"(data : Bytes, nodes : Array(Node) = <span class=\"o\">[]</span> <span class=\"k\">of</span> <span class=\"t\">Node</span>) : Array(Node)","args_html":"(data : Bytes, nodes : Array(<a href=\"../MerkleTree/Node.html\">Node</a>) = <span class=\"o\">[]</span> <span class=\"k\">of</span> <span class=\"t\">Node</span>) : Array(<a href=\"../MerkleTree/Node.html\">Node</a>)","location":{"filename":"src/merkle_tree_stream.cr","line_number":45,"url":"https://github.com/dukeraphaelng/merkle_tree_stream/blob/7519fa6d975f7479fb2e9d70a810d08ad3ce72a7/src/merkle_tree_stream.cr#L45"},"def":{"name":"next","args":[{"name":"data","doc":null,"default_value":"","external_name":"data","restriction":"Bytes"},{"name":"nodes","doc":null,"default_value":"[] of Node","external_name":"nodes","restriction":"Array(Node)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Array(Node)","visibility":"Public","body":"index : UInt64 = 2_u64 * @blocks\n@blocks = @blocks + 1\nleaf_node = Node.new(index: index, parent: FlatTree.parent(index), hash: nil, size: data.size.to_u64, data: data)\nleaf_node.hash = @leaf.call(leaf_node, @roots)\n@roots.push(leaf_node)\nnodes.push(leaf_node)\nwhile @roots.size > 1\n  left = @roots[-2]\n  right = @roots.last\n  if left.parent != right.parent\n    break\n  end\n  @roots.pop\n  new_node = Node.new(index: left.parent, parent: FlatTree.parent(left.parent), hash: @parent.call(left, right), size: left.size + right.size, data: Bytes.empty)\n  @roots[-1] = new_node\n  nodes.push(new_node)\nend\nnodes\n"}},{"id":"parent:Proc(Node,Node,Bytes)-instance-method","html_id":"parent:Proc(Node,Node,Bytes)-instance-method","name":"parent","doc":"Pass hashes through a hash function","summary":"<p>Pass hashes through a hash function</p>","abstract":false,"args":[],"args_string":" : Proc(Node, Node, Bytes)","args_html":" : Proc(<a href=\"../MerkleTree/Node.html\">Node</a>, <a href=\"../MerkleTree/Node.html\">Node</a>, Bytes)","location":{"filename":"src/merkle_tree_stream.cr","line_number":24,"url":"https://github.com/dukeraphaelng/merkle_tree_stream/blob/7519fa6d975f7479fb2e9d70a810d08ad3ce72a7/src/merkle_tree_stream.cr#L24"},"def":{"name":"parent","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Proc(Node, Node, Bytes)","visibility":"Public","body":"@parent"}},{"id":"roots:Array(Node)-instance-method","html_id":"roots:Array(Node)-instance-method","name":"roots","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Array(Node)","args_html":" : Array(<a href=\"../MerkleTree/Node.html\">Node</a>)","location":{"filename":"src/merkle_tree_stream.cr","line_number":25,"url":"https://github.com/dukeraphaelng/merkle_tree_stream/blob/7519fa6d975f7479fb2e9d70a810d08ad3ce72a7/src/merkle_tree_stream.cr#L25"},"def":{"name":"roots","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Array(Node)","visibility":"Public","body":"@roots"}}],"macros":[],"types":[]}]}]}})